{"Event":"SparkListenerLogStart","Spark Version":"3.5.1"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"memory":{"Resource Name":"memory","Amount":1024,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"306c10bfc250","Port":41353},"Maximum Memory":455501414,"Timestamp":1759076569254,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/usr/lib/jvm/java-11-openjdk-amd64","Java Version":"11.0.28 (Ubuntu)","Scala Version":"version 2.12.18"},"Spark Properties":{"spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.driver.host":"306c10bfc250","spark.serializer.objectStreamReset":"100","spark.eventLog.enabled":"true","spark.ui.port":"4040","spark.driver.port":"39735","spark.rdd.compress":"True","spark.jars":"*********(redacted)","spark.app.name":"KafkaTestStreaming","spark.app.initial.file.urls":"*********(redacted)","spark.scheduler.mode":"FIFO","spark.submit.pyFiles":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.app.submitTime":"1759076568310","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.files":"*********(redacted)","spark.app.startTime":"1759076568485","spark.executor.id":"driver","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.app.initial.jar.urls":"*********(redacted)","spark.submit.deployMode":"client","spark.master":"spark://spark-master:7077","spark.eventLog.dir":"/tmp/spark-events","spark.repl.local.jars":"*********(redacted)","spark.app.id":"app-20250928162249-0006"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"s3.amazonaws.com","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"false","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"\n    org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider,\n    org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider,\n    com.amazonaws.auth.EnvironmentVariableCredentialsProvider,\n    org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider\n  ","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"64M","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.maintenance.version":"3","java.specification.version":"11","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"Ubuntu","java.vm.specification.version":"11","user.home":"/home/jovyan","sun.arch.data.model":"64","sun.boot.library.path":"/usr/lib/jvm/java-11-openjdk-amd64/lib","user.dir":"/home/jovyan/work","java.library.path":"/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib","sun.cpu.isalist":"","os.arch":"amd64","java.vm.version":"11.0.28+6-post-Ubuntu-1ubuntu122.04.1","jetty.git.hash":"abdcda73818a1a2c705da276edb0bf6581e7997e","java.runtime.version":"11.0.28+6-post-Ubuntu-1ubuntu122.04.1","java.vm.info":"mixed mode, sharing","java.runtime.name":"OpenJDK Runtime Environment","java.version.date":"2025-07-15","file.separator":"/","java.class.version":"55.0","java.specification.name":"Java Platform API Specification","file.encoding":"UTF-8","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"GMT","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","java.vm.compressedOopsMode":"32-bit","os.version":"6.12.38+kali-amd64","sun.os.patch.level":"unknown","java.vm.specification.vendor":"Oracle Corporation","user.country":"US","sun.jnu.encoding":"UTF-8","user.language":"en","java.vendor.url":"https://ubuntu.com/","java.awt.printerjob":"sun.print.PSPrinterJob","java.awt.graphicsenv":"sun.awt.X11GraphicsEnvironment","awt.toolkit":"sun.awt.X11.XToolkit","os.name":"Linux","java.vm.vendor":"Ubuntu","jdk.debug":"release","java.vendor.url.bug":"https://bugs.launchpad.net/ubuntu/+source/openjdk-lts","user.name":"jovyan","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --master spark://spark-master:7077 --conf spark.master=spark://spark-master:7077 --conf spark.jars.packages=org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1 --conf spark.eventLog.enabled=true --conf spark.eventLog.dir=/tmp/spark-events --conf spark.app.name=KafkaTestStreaming --conf spark.ui.port=4040 pyspark-shell","java.home":"/usr/lib/jvm/java-11-openjdk-amd64","java.version":"11.0.28","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"spark://306c10bfc250:39735/jars/org.slf4j_slf4j-api-2.0.7.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/annotations-17.0.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kryo-shaded-4.0.2.jar":"System Classpath","spark://306c10bfc250:39735/files/org.apache.kafka_kafka-clients-3.4.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/activation-1.1.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hk2-utils-2.6.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/libthrift-0.12.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/paranamer-2.8.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-graphx_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/super-csv-2.2.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-logging-1.1.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jsr305-3.0.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-lang3-3.12.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-mesos_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jodd-core-3.5.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-kubernetes_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-core_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/httpclient-4.5.14.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-common-utils_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","spark://306c10bfc250:39735/files/commons-logging_commons-logging-1.1.3.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-unsafe_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/joda-time-2.12.5.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/transaction-api-1.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/scala-library-2.12.18.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/parquet-common-1.13.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/okhttp-3.12.12.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/parquet-column-1.13.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/snakeyaml-2.0.jar":"System Classpath","spark://306c10bfc250:39735/files/org.xerial.snappy_snappy-java-1.1.10.3.jar":"Added By User","spark://306c10bfc250:39735/files/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/orc-shims-1.9.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/tink-1.9.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/zstd-jni-1.5.5-4.jar":"System Classpath","spark://306c10bfc250:39735/jars/com.google.code.findbugs_jsr305-3.0.0.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jersey-client-2.40.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-collections4-4.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","spark://306c10bfc250:39735/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-mllib-local_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/chill-java-0.10.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-compress-1.23.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-crypto-1.1.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/javassist-3.29.2-GA.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/json-1.8.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/pickle-1.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","spark://306c10bfc250:39735/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jta-1.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","spark://306c10bfc250:39735/files/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/stream-2.9.6.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/scala-compiler-2.12.18.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-lang-2.6.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-streaming_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/log4j-core-2.20.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-beeline-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/leveldbjni-all-1.8.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/aircompressor-0.26.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-launcher_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-databind-2.15.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-math3-3.6.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/chill_2.12-0.10.0.jar":"System Classpath","spark://306c10bfc250:39735/jars/org.apache.kafka_kafka-clients-3.4.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-kvstore_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-network-common_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/avro-ipc-1.11.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/oro-2.0.8.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-serde-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/lapack-3.0.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/curator-framework-2.13.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/scala-reflect-2.12.18.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/slf4j-api-2.0.7.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/JTransforms-3.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-pool-1.5.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/orc-core-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hk2-locator-2.6.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-cli-1.5.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","spark://306c10bfc250:39735/files/org.lz4_lz4-java-1.8.0.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-cli-2.3.9.jar":"System Classpath","spark://306c10bfc250:39735/files/org.apache.commons_commons-pool2-2.11.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","spark://306c10bfc250:39735/files/org.apache.hadoop_hadoop-client-api-3.3.4.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-core-2.15.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/compress-lzf-1.1.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/audience-annotations-0.5.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-tags_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/minlog-1.3.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-sketch_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/curator-client-2.13.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/avro-1.11.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/arpack_combined_all-0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/avro-mapred-1.11.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","spark://306c10bfc250:39735/jars/org.lz4_lz4-java-1.8.0.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/ST4-4.0.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/orc-mapreduce-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","spark://306c10bfc250:39735/files/com.google.code.findbugs_jsr305-3.0.0.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-compiler-3.1.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/metrics-json-4.2.19.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-yarn_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/opencsv-2.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jdo-api-3.0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-collections-3.2.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-metastore-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/okio-1.15.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-text-1.10.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/libfb303-0.9.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/arrow-format-12.0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/xz-1.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/janino-3.1.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/JLargeArrays-1.5.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/breeze_2.12-2.1.0.jar":"System Classpath","spark://306c10bfc250:39735/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-sql-api_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/guava-14.0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-shims-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/arpack-3.0.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jersey-common-2.40.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/javolution-5.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jpam-1.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-io-2.13.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jersey-hk2-2.40.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/stax-api-1.0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/gson-2.2.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-hive-thriftserver_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/derby-10.14.2.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jline-2.14.6.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/snappy-java-1.1.10.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spire_2.12-0.17.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","spark://306c10bfc250:39735/files/org.slf4j_slf4j-api-2.0.7.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/ivy-2.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/curator-recipes-2.13.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/blas-3.0.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-mllib_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-catalyst_2.12-3.5.1.jar":"System Classpath","spark://306c10bfc250:39735/jars/commons-logging_commons-logging-1.1.3.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-dbcp-1.4.jar":"System Classpath","spark://306c10bfc250:39735/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-hive_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/shims-0.9.45.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jersey-server-2.40.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hk2-api-2.6.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/datasketches-java-3.3.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-repl_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/zookeeper-3.6.3.jar":"System Classpath","spark://306c10bfc250:39735/jars/org.apache.commons_commons-pool2-2.11.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/commons-codec-1.16.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/log4j-api-2.20.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/py4j-0.10.9.7.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/HikariCP-2.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-sql_2.12-3.5.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/algebra_2.12-2.0.1.jar":"System Classpath","spark://306c10bfc250:39735/files/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/lz4-java-1.8.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/httpcore-4.4.16.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/metrics-core-4.2.19.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/conf":"System Classpath","spark://306c10bfc250:39735/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.1.jar":"Added By User","/opt/conda/lib/python3.11/site-packages/pyspark/jars/arrow-vector-12.0.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/objenesis-3.3.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/threeten-extra-1.7.1.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/hive-common-2.3.9.jar":"System Classpath","/opt/conda/lib/python3.11/site-packages/pyspark/jars/spark-network-shuffle_2.12-3.5.1.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"KafkaTestStreaming","App ID":"app-20250928162249-0006","Timestamp":1759076568485,"User":"jovyan"}
{"Event":"SparkListenerExecutorAdded","Timestamp":1759076572215,"Executor ID":"0","Executor Info":{"Host":"172.18.0.8","Total Cores":2,"Log Urls":{"stdout":"http://172.18.0.8:8081/logPage/?appId=app-20250928162249-0006&executorId=0&logType=stdout","stderr":"http://172.18.0.8:8081/logPage/?appId=app-20250928162249-0006&executorId=0&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1759076572214}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1759076572259,"Executor ID":"1","Executor Info":{"Host":"172.18.0.2","Total Cores":2,"Log Urls":{"stdout":"http://172.18.0.2:8081/logPage/?appId=app-20250928162249-0006&executorId=1&logType=stdout","stderr":"http://172.18.0.2:8081/logPage/?appId=app-20250928162249-0006&executorId=1&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1759076572259}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"0","Host":"172.18.0.8","Port":34905},"Maximum Memory":455501414,"Timestamp":1759076572295,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"1","Host":"172.18.0.2","Port":34173},"Maximum Memory":455501414,"Timestamp":1759076572329,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryStartedEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:22:53.112Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@15f0e1b0\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@23621644","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":3,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":4,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076574201,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":0,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@41b607ff\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@23621644","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":3,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":4,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076574219,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1759076574570,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"4\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"1","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"4\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076574583,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"1","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076574695,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076574695,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759076574985,"Failed":false,"Killed":false,"Accumulables":[{"ID":5,"Name":"internal.metrics.executorDeserializeTime","Update":210,"Value":210,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.executorDeserializeCpuTime","Update":161183567,"Value":161183567,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.executorRunTime","Update":25,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":8,"Name":"internal.metrics.executorCpuTime","Update":24930437,"Value":24930437,"Internal":true,"Count Failed Values":true},{"ID":9,"Name":"internal.metrics.resultSize","Update":1295,"Value":1295,"Internal":true,"Count Failed Values":true},{"ID":10,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":11,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":210,"Executor Deserialize CPU Time":161183567,"Executor Run Time":25,"Executor CPU Time":24930437,"Peak Execution Memory":0,"Result Size":1295,"JVM GC Time":9,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"4\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076574583,"Completion Time":1759076574990,"Accumulables":[{"ID":5,"Name":"internal.metrics.executorDeserializeTime","Value":210,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.executorDeserializeCpuTime","Value":161183567,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.executorRunTime","Value":25,"Internal":true,"Count Failed Values":true},{"ID":8,"Name":"internal.metrics.executorCpuTime","Value":24930437,"Internal":true,"Count Failed Values":true},{"ID":9,"Name":"internal.metrics.resultSize","Value":1295,"Internal":true,"Count Failed Values":true},{"ID":10,"Name":"internal.metrics.jvmGCTime","Value":9,"Internal":true,"Count Failed Values":true},{"ID":11,"Name":"internal.metrics.resultSerializationTime","Value":2,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1759076574992,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":0,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#28]\nArguments: <empty>, [toprettystring(value)#28]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan <empty>, [toprettystring(value)#28]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":40,"metricType":"sum"}]},"time":1759076575036,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[40,0]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1759076575043,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1759076575049,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1759076575049,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:22:53.156Z","batchId":0,"batchDuration":1915,"durationMs":{"triggerExecution":1914,"queryPlanning":318,"getBatch":33,"commitOffsets":20,"latestOffset":586,"addBatch":892,"walCommit":39},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":null,"endOffset":"{\"test-topic\":{\"0\":110}}","latestOffset":"{\"test-topic\":{\"0\":110}}","numInputRows":0,"inputRowsPerSecond":0.0,"processedRowsPerSecond":0.0,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":0,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:23:10.000Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":3,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4225b37d\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@35e34105","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":42,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":43,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":44,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":41,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076600064,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":3,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6284dfa4\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@35e34105","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":42,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":43,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":44,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":41,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076600076,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1759076600091,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"DataSourceRDD","Scope":"{\"id\":\"9\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"4","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"1","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 1","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"DataSourceRDD","Scope":"{\"id\":\"9\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076600095,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"4","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"1","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 1","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076600106,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076600106,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759076601813,"Failed":false,"Killed":false,"Accumulables":[{"ID":41,"Name":"duration","Update":"1226","Value":"1226","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":42,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":45,"Name":"internal.metrics.executorDeserializeTime","Update":220,"Value":220,"Internal":true,"Count Failed Values":true},{"ID":46,"Name":"internal.metrics.executorDeserializeCpuTime","Update":196284995,"Value":196284995,"Internal":true,"Count Failed Values":true},{"ID":47,"Name":"internal.metrics.executorRunTime","Update":1458,"Value":1458,"Internal":true,"Count Failed Values":true},{"ID":48,"Name":"internal.metrics.executorCpuTime","Update":919997950,"Value":919997950,"Internal":true,"Count Failed Values":true},{"ID":49,"Name":"internal.metrics.resultSize","Update":2587,"Value":2587,"Internal":true,"Count Failed Values":true},{"ID":50,"Name":"internal.metrics.jvmGCTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":51,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":77,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":220,"Executor Deserialize CPU Time":196284995,"Executor Run Time":1458,"Executor CPU Time":919997950,"Peak Execution Memory":0,"Result Size":2587,"JVM GC Time":16,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"DataSourceRDD","Scope":"{\"id\":\"9\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076600095,"Completion Time":1759076601814,"Accumulables":[{"ID":41,"Name":"duration","Value":"1226","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":42,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":45,"Name":"internal.metrics.executorDeserializeTime","Value":220,"Internal":true,"Count Failed Values":true},{"ID":46,"Name":"internal.metrics.executorDeserializeCpuTime","Value":196284995,"Internal":true,"Count Failed Values":true},{"ID":47,"Name":"internal.metrics.executorRunTime","Value":1458,"Internal":true,"Count Failed Values":true},{"ID":48,"Name":"internal.metrics.executorCpuTime","Value":919997950,"Internal":true,"Count Failed Values":true},{"ID":49,"Name":"internal.metrics.resultSize","Value":2587,"Internal":true,"Count Failed Values":true},{"ID":50,"Name":"internal.metrics.jvmGCTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":51,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":77,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1759076601814,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":3,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#36]\nArguments: [toprettystring(value)#36]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#36]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":80,"metricType":"sum"}]},"time":1759076601829,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[80,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1759076602480,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1759076602481,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1759076602481,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:23:20.000Z","batchId":1,"batchDuration":2497,"durationMs":{"triggerExecution":2497,"queryPlanning":13,"getBatch":1,"commitOffsets":16,"latestOffset":6,"addBatch":2427,"walCommit":33},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":110}}","endOffset":"{\"test-topic\":{\"0\":120}}","latestOffset":"{\"test-topic\":{\"0\":120}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":4.004805766920304,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":6,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 2","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@5f32a613\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4e3986","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":82,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":83,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":84,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":81,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076610067,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":6,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 2","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@d86084\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4e3986","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":82,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":83,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":84,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":81,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076610078,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1759076610093,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"13\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"DataSourceRDD","Scope":"{\"id\":\"16\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"7","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"2","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 2","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"13\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"DataSourceRDD","Scope":"{\"id\":\"16\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076610095,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"7","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"2","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 2","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076610100,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076610100,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759076610654,"Failed":false,"Killed":false,"Accumulables":[{"ID":81,"Name":"duration","Update":"522","Value":"522","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":82,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":85,"Name":"internal.metrics.executorDeserializeTime","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":86,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9048334,"Value":9048334,"Internal":true,"Count Failed Values":true},{"ID":87,"Name":"internal.metrics.executorRunTime","Update":525,"Value":525,"Internal":true,"Count Failed Values":true},{"ID":88,"Name":"internal.metrics.executorCpuTime","Update":23737066,"Value":23737066,"Internal":true,"Count Failed Values":true},{"ID":89,"Name":"internal.metrics.resultSize","Update":2544,"Value":2544,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":117,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":14,"Executor Deserialize CPU Time":9048334,"Executor Run Time":525,"Executor CPU Time":23737066,"Peak Execution Memory":0,"Result Size":2544,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"13\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"DataSourceRDD","Scope":"{\"id\":\"16\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076610095,"Completion Time":1759076610655,"Accumulables":[{"ID":81,"Name":"duration","Value":"522","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":82,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":85,"Name":"internal.metrics.executorDeserializeTime","Value":14,"Internal":true,"Count Failed Values":true},{"ID":86,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9048334,"Internal":true,"Count Failed Values":true},{"ID":87,"Name":"internal.metrics.executorRunTime","Value":525,"Internal":true,"Count Failed Values":true},{"ID":88,"Name":"internal.metrics.executorCpuTime","Value":23737066,"Internal":true,"Count Failed Values":true},{"ID":89,"Name":"internal.metrics.resultSize","Value":2544,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":117,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1759076610655,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":8,"rootExecutionId":6,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 2","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#44]\nArguments: [toprettystring(value)#44]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#44]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":120,"metricType":"sum"}]},"time":1759076610672,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":8,"accumUpdates":[[120,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":8,"time":1759076610678,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1759076610679,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1759076610679,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:23:30.000Z","batchId":2,"batchDuration":696,"durationMs":{"triggerExecution":696,"queryPlanning":12,"getBatch":1,"commitOffsets":17,"latestOffset":7,"addBatch":620,"walCommit":38},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":120}}","endOffset":"{\"test-topic\":{\"0\":130}}","latestOffset":"{\"test-topic\":{\"0\":130}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":14.367816091954024,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":9,"rootExecutionId":9,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 3","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 3, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6532b9d8\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 3, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4a0b93ad","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":122,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":123,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":124,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":121,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076620063,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":10,"rootExecutionId":9,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 3","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 3, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@e1d860f\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 3, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4a0b93ad","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":122,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":123,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":124,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":121,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076620070,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":10,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1759076620079,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"DataSourceRDD","Scope":"{\"id\":\"23\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"10","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"3","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 3","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"9","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"DataSourceRDD","Scope":"{\"id\":\"23\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076620080,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"10","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"3","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 3","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"9","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076620084,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076620084,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759076620623,"Failed":false,"Killed":false,"Accumulables":[{"ID":121,"Name":"duration","Update":"515","Value":"515","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":122,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":125,"Name":"internal.metrics.executorDeserializeTime","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":126,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7090628,"Value":7090628,"Internal":true,"Count Failed Values":true},{"ID":127,"Name":"internal.metrics.executorRunTime","Update":516,"Value":516,"Internal":true,"Count Failed Values":true},{"ID":128,"Name":"internal.metrics.executorCpuTime","Update":14026216,"Value":14026216,"Internal":true,"Count Failed Values":true},{"ID":129,"Name":"internal.metrics.resultSize","Update":2501,"Value":2501,"Internal":true,"Count Failed Values":true},{"ID":157,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":11,"Executor Deserialize CPU Time":7090628,"Executor Run Time":516,"Executor CPU Time":14026216,"Peak Execution Memory":0,"Result Size":2501,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"DataSourceRDD","Scope":"{\"id\":\"23\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076620080,"Completion Time":1759076620625,"Accumulables":[{"ID":121,"Name":"duration","Value":"515","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":122,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":125,"Name":"internal.metrics.executorDeserializeTime","Value":11,"Internal":true,"Count Failed Values":true},{"ID":126,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7090628,"Internal":true,"Count Failed Values":true},{"ID":127,"Name":"internal.metrics.executorRunTime","Value":516,"Internal":true,"Count Failed Values":true},{"ID":128,"Name":"internal.metrics.executorCpuTime","Value":14026216,"Internal":true,"Count Failed Values":true},{"ID":129,"Name":"internal.metrics.resultSize","Value":2501,"Internal":true,"Count Failed Values":true},{"ID":157,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1759076620625,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":11,"rootExecutionId":9,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 3","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#52]\nArguments: [toprettystring(value)#52]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#52]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":160,"metricType":"sum"}]},"time":1759076620637,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":11,"accumUpdates":[[160,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":11,"time":1759076620643,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":10,"time":1759076620643,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":9,"time":1759076620643,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:23:40.001Z","batchId":3,"batchDuration":657,"durationMs":{"triggerExecution":657,"queryPlanning":11,"getBatch":1,"commitOffsets":15,"latestOffset":8,"addBatch":587,"walCommit":34},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":130}}","endOffset":"{\"test-topic\":{\"0\":140}}","latestOffset":"{\"test-topic\":{\"0\":140}}","numInputRows":10,"inputRowsPerSecond":0.9999000099990002,"processedRowsPerSecond":15.220700152207002,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:24:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:24:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:24:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:24:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:25:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:25:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:25:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:25:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:26:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:26:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:26:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:26:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:27:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:27:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:27:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:27:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:28:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:28:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:28:30.001Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":12,"rootExecutionId":12,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 4","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 4, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@33376fcc\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 4, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@636c40a4","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":162,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":163,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":164,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":161,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076930054,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":13,"rootExecutionId":12,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 4","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 4, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@71499468\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 4, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@636c40a4","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":162,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":163,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":164,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":161,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076930060,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":13,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1759076930068,"Stage Infos":[{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"DataSourceRDD","Scope":"{\"id\":\"30\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[4],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"13","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"4","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 4","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"12","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"DataSourceRDD","Scope":"{\"id\":\"30\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076930069,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"13","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"4","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 4","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"12","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076930073,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076930073,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759076930624,"Failed":false,"Killed":false,"Accumulables":[{"ID":161,"Name":"duration","Update":"522","Value":"522","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":162,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":165,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":166,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9075736,"Value":9075736,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.executorRunTime","Update":525,"Value":525,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.executorCpuTime","Update":24174123,"Value":24174123,"Internal":true,"Count Failed Values":true},{"ID":169,"Name":"internal.metrics.resultSize","Update":2501,"Value":2501,"Internal":true,"Count Failed Values":true},{"ID":197,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":9075736,"Executor Run Time":525,"Executor CPU Time":24174123,"Peak Execution Memory":0,"Result Size":2501,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"DataSourceRDD","Scope":"{\"id\":\"30\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076930069,"Completion Time":1759076930626,"Accumulables":[{"ID":161,"Name":"duration","Value":"522","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":162,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":165,"Name":"internal.metrics.executorDeserializeTime","Value":13,"Internal":true,"Count Failed Values":true},{"ID":166,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9075736,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.executorRunTime","Value":525,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.executorCpuTime","Value":24174123,"Internal":true,"Count Failed Values":true},{"ID":169,"Name":"internal.metrics.resultSize","Value":2501,"Internal":true,"Count Failed Values":true},{"ID":197,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1759076930626,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":14,"rootExecutionId":12,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 4","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#60]\nArguments: [toprettystring(value)#60]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#60]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":200,"metricType":"sum"}]},"time":1759076930639,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":14,"accumUpdates":[[200,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":14,"time":1759076930644,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":13,"time":1759076930644,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":12,"time":1759076930644,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:28:50.000Z","batchId":4,"batchDuration":660,"durationMs":{"triggerExecution":659,"queryPlanning":9,"getBatch":0,"commitOffsets":15,"latestOffset":8,"addBatch":596,"walCommit":29},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":140}}","endOffset":"{\"test-topic\":{\"0\":150}}","latestOffset":"{\"test-topic\":{\"0\":150}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":15.15151515151515,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":15,"rootExecutionId":15,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 5","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 5, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@606c0dcb\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 5, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@620f8622","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":202,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":203,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":204,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":201,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076950057,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":16,"rootExecutionId":15,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 5","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 5, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6c39328e\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 5, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@620f8622","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":202,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":203,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":204,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":201,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759076950066,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":16,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1759076950077,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"34\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"DataSourceRDD","Scope":"{\"id\":\"37\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"37\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"16","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"5","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 5","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"15","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"34\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"DataSourceRDD","Scope":"{\"id\":\"37\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"37\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076950078,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"16","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"5","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 5","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"15","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076950083,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759076950083,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759076950627,"Failed":false,"Killed":false,"Accumulables":[{"ID":201,"Name":"duration","Update":"519","Value":"519","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":205,"Name":"internal.metrics.executorDeserializeTime","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":206,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7417881,"Value":7417881,"Internal":true,"Count Failed Values":true},{"ID":207,"Name":"internal.metrics.executorRunTime","Update":522,"Value":522,"Internal":true,"Count Failed Values":true},{"ID":208,"Name":"internal.metrics.executorCpuTime","Update":19977169,"Value":19977169,"Internal":true,"Count Failed Values":true},{"ID":209,"Name":"internal.metrics.resultSize","Update":2501,"Value":2501,"Internal":true,"Count Failed Values":true},{"ID":237,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":12,"Executor Deserialize CPU Time":7417881,"Executor Run Time":522,"Executor CPU Time":19977169,"Peak Execution Memory":0,"Result Size":2501,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"34\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"DataSourceRDD","Scope":"{\"id\":\"37\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"37\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759076950078,"Completion Time":1759076950629,"Accumulables":[{"ID":201,"Name":"duration","Value":"519","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":205,"Name":"internal.metrics.executorDeserializeTime","Value":12,"Internal":true,"Count Failed Values":true},{"ID":206,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7417881,"Internal":true,"Count Failed Values":true},{"ID":207,"Name":"internal.metrics.executorRunTime","Value":522,"Internal":true,"Count Failed Values":true},{"ID":208,"Name":"internal.metrics.executorCpuTime","Value":19977169,"Internal":true,"Count Failed Values":true},{"ID":209,"Name":"internal.metrics.resultSize","Value":2501,"Internal":true,"Count Failed Values":true},{"ID":237,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1759076950629,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":17,"rootExecutionId":15,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 5","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#68]\nArguments: [toprettystring(value)#68]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#68]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":240,"metricType":"sum"}]},"time":1759076950644,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":17,"accumUpdates":[[240,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":17,"time":1759076950648,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":16,"time":1759076950648,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":15,"time":1759076950648,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:29:10.000Z","batchId":5,"batchDuration":663,"durationMs":{"triggerExecution":663,"queryPlanning":10,"getBatch":1,"commitOffsets":15,"latestOffset":6,"addBatch":602,"walCommit":28},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":150}}","endOffset":"{\"test-topic\":{\"0\":160}}","latestOffset":"{\"test-topic\":{\"0\":160}}","numInputRows":10,"inputRowsPerSecond":1.000100010001,"processedRowsPerSecond":15.082956259426847,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:29:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:29:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:30:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:30:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:30:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryStartedEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","name":null,"timestamp":"2025-09-28T16:30:36.464Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":18,"rootExecutionId":18,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#80 as string) AS value#93]\nInput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#93]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@1d939c76\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@5f29ab5a","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#80 as string) AS value#93]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":242,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":243,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":244,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":241,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077036553,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":19,"rootExecutionId":18,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#80 as string) AS value#93]\nInput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#93]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@35b3fc72\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@5f29ab5a","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#80 as string) AS value#93]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":242,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":243,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":244,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":241,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077036565,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":19,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1759077036579,"Stage Infos":[{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":22,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"45\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[6],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"aab100ec-0c4c-42f4-b383-765a004d3dd9","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"19","sql.streaming.queryId":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"18","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":22,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"45\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077036581,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"aab100ec-0c4c-42f4-b383-765a004d3dd9","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"19","sql.streaming.queryId":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"18","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077036590,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077036590,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077036617,"Failed":false,"Killed":false,"Accumulables":[{"ID":245,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":246,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9019442,"Value":9019442,"Internal":true,"Count Failed Values":true},{"ID":247,"Name":"internal.metrics.executorRunTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":248,"Name":"internal.metrics.executorCpuTime","Update":1907557,"Value":1907557,"Internal":true,"Count Failed Values":true},{"ID":249,"Name":"internal.metrics.resultSize","Update":1209,"Value":1209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":9019442,"Executor Run Time":1,"Executor CPU Time":1907557,"Peak Execution Memory":0,"Result Size":1209,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":22,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"45\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077036581,"Completion Time":1759077036618,"Accumulables":[{"ID":245,"Name":"internal.metrics.executorDeserializeTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":246,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9019442,"Internal":true,"Count Failed Values":true},{"ID":247,"Name":"internal.metrics.executorRunTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":248,"Name":"internal.metrics.executorCpuTime","Value":1907557,"Internal":true,"Count Failed Values":true},{"ID":249,"Name":"internal.metrics.resultSize","Value":1209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1759077036619,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":20,"rootExecutionId":18,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#100]\nArguments: <empty>, [toprettystring(value)#100]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan <empty>, [toprettystring(value)#100]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":280,"metricType":"sum"}]},"time":1759077036633,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":20,"accumUpdates":[[280,0]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":20,"time":1759077036637,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":19,"time":1759077036638,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":18,"time":1759077036638,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","name":null,"timestamp":"2025-09-28T16:30:36.467Z","batchId":0,"batchDuration":187,"durationMs":{"triggerExecution":187,"queryPlanning":12,"getBatch":3,"commitOffsets":16,"latestOffset":42,"addBatch":97,"walCommit":15},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":null,"endOffset":"{\"test-topic\":{\"0\":160}}","latestOffset":"{\"test-topic\":{\"0\":160}}","numInputRows":0,"inputRowsPerSecond":0.0,"processedRowsPerSecond":0.0,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":0,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:30:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:30:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:30:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryStartedEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","name":null,"timestamp":"2025-09-28T16:31:08.481Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":21,"rootExecutionId":21,"description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#112 as string) AS value#125]\nInput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#125]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@7bfab9ca\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4f787dad","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#112 as string) AS value#125]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":282,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":283,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":284,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":281,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077068557,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":22,"rootExecutionId":21,"description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#112 as string) AS value#125]\nInput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#125]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@f01878f\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4f787dad","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#112 as string) AS value#125]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":282,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":283,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":284,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":281,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077068566,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":22,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1759077068575,"Stage Infos":[{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":26,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"51\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[7],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"22","sql.streaming.queryId":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"21","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":26,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"51\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077068576,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"22","sql.streaming.queryId":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"21","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":7,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077068583,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":7,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077068583,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077068609,"Failed":false,"Killed":false,"Accumulables":[{"ID":285,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8950043,"Value":8950043,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.executorRunTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.executorCpuTime","Update":1384715,"Value":1384715,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.resultSize","Update":1209,"Value":1209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":8950043,"Executor Run Time":1,"Executor CPU Time":1384715,"Peak Execution Memory":0,"Result Size":1209,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":26,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"51\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077068576,"Completion Time":1759077068610,"Accumulables":[{"ID":285,"Name":"internal.metrics.executorDeserializeTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8950043,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.executorRunTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.executorCpuTime","Value":1384715,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.resultSize","Value":1209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1759077068611,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":23,"rootExecutionId":21,"description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#132]\nArguments: <empty>, [toprettystring(value)#132]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan <empty>, [toprettystring(value)#132]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":320,"metricType":"sum"}]},"time":1759077068625,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":23,"accumUpdates":[[320,0]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":23,"time":1759077068628,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":22,"time":1759077068629,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":21,"time":1759077068629,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","name":null,"timestamp":"2025-09-28T16:31:08.483Z","batchId":0,"batchDuration":163,"durationMs":{"triggerExecution":163,"queryPlanning":11,"getBatch":1,"commitOffsets":17,"latestOffset":37,"addBatch":78,"walCommit":17},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":null,"endOffset":"{\"test-topic\":{\"0\":170}}","latestOffset":"{\"test-topic\":{\"0\":170}}","numInputRows":0,"inputRowsPerSecond":0.0,"processedRowsPerSecond":0.0,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":0,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":24,"rootExecutionId":24,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 6","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 6, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@453bf0c4\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 6, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6a1aa31b","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":322,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":323,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":324,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":321,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077070046,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":25,"rootExecutionId":25,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#80 as string) AS value#93]\nInput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#93]\nArguments: MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@150bb361\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@45d87d32","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#80 as string) AS value#93]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":326,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":327,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":328,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":325,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077070048,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":26,"rootExecutionId":24,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 6","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 6, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@72d0ef23\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 6, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6a1aa31b","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":322,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":323,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":324,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":321,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077070055,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":27,"rootExecutionId":25,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#80 as string) AS value#93]\nInput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#93]\nArguments: MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@158a7202\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@45d87d32","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#80 as string) AS value#93]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":326,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":327,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":328,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":325,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077070058,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":26,"accumUpdates":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":27,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1759077070069,"Stage Infos":[{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"DataSourceRDD","Scope":"{\"id\":\"60\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[8],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"26","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"6","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 6","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"24","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"DataSourceRDD","Scope":"{\"id\":\"60\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077070070,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"26","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"6","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 6","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"24","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1759077070074,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"54\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"DataSourceRDD","Scope":"{\"id\":\"59\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"aab100ec-0c4c-42f4-b383-765a004d3dd9","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"27","sql.streaming.queryId":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"1","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 1","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"25","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"54\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"DataSourceRDD","Scope":"{\"id\":\"59\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077070075,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"aab100ec-0c4c-42f4-b383-765a004d3dd9","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"27","sql.streaming.queryId":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"1","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 1","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"25","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077070074,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077070080,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077070074,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077070625,"Failed":false,"Killed":false,"Accumulables":[{"ID":321,"Name":"duration","Update":"521","Value":"521","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":329,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7918559,"Value":7918559,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.executorRunTime","Update":523,"Value":523,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.executorCpuTime","Update":22008996,"Value":22008996,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.resultSize","Update":2501,"Value":2501,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":7918559,"Executor Run Time":523,"Executor CPU Time":22008996,"Peak Execution Memory":0,"Result Size":2501,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"DataSourceRDD","Scope":"{\"id\":\"60\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077070070,"Completion Time":1759077070626,"Accumulables":[{"ID":321,"Name":"duration","Value":"521","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":329,"Name":"internal.metrics.executorDeserializeTime","Value":18,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7918559,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.executorRunTime","Value":523,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.executorCpuTime","Value":22008996,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.resultSize","Value":2501,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1759077070627,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077070080,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077070642,"Failed":false,"Killed":false,"Accumulables":[{"ID":325,"Name":"duration","Update":"533","Value":"533","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":364,"Name":"internal.metrics.executorDeserializeTime","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8845499,"Value":8845499,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.executorRunTime","Update":536,"Value":536,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.executorCpuTime","Update":33936289,"Value":33936289,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.resultSize","Update":2544,"Value":2544,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":396,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":14,"Executor Deserialize CPU Time":8845499,"Executor Run Time":536,"Executor CPU Time":33936289,"Peak Execution Memory":0,"Result Size":2544,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"54\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"DataSourceRDD","Scope":"{\"id\":\"59\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077070075,"Completion Time":1759077070643,"Accumulables":[{"ID":325,"Name":"duration","Value":"533","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":364,"Name":"internal.metrics.executorDeserializeTime","Value":14,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8845499,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.executorRunTime","Value":536,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.executorCpuTime","Value":33936289,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.resultSize","Value":2544,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":396,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1759077070643,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":28,"rootExecutionId":24,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 6","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#141]\nArguments: [toprettystring(value)#141]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#141]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":399,"metricType":"sum"}]},"time":1759077070644,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":28,"accumUpdates":[[399,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":28,"time":1759077070649,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":26,"time":1759077070651,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":24,"time":1759077070651,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":29,"rootExecutionId":25,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#147]\nArguments: [toprettystring(value)#147]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#147]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":400,"metricType":"sum"}]},"time":1759077070659,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":29,"accumUpdates":[[400,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":29,"time":1759077070665,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":27,"time":1759077070665,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":25,"time":1759077070665,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:31:10.000Z","batchId":6,"batchDuration":678,"durationMs":{"triggerExecution":678,"queryPlanning":10,"getBatch":0,"commitOffsets":27,"latestOffset":4,"addBatch":613,"walCommit":23},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":160}}","endOffset":"{\"test-topic\":{\"0\":170}}","latestOffset":"{\"test-topic\":{\"0\":170}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":14.749262536873156,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","name":null,"timestamp":"2025-09-28T16:31:10.000Z","batchId":1,"batchDuration":687,"durationMs":{"triggerExecution":687,"queryPlanning":12,"getBatch":0,"commitOffsets":21,"latestOffset":4,"addBatch":626,"walCommit":23},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":160}}","endOffset":"{\"test-topic\":{\"0\":170}}","latestOffset":"{\"test-topic\":{\"0\":170}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":14.556040756914118,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:31:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:31:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:31:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:31:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:31:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:31:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:31:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:32:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:32:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:32:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:32:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:32:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:32:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:32:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:32:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:32:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:32:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:32:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:32:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:32:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:32:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:33:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:33:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:33:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:33:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:33:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:33:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:33:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:33:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:33:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:33:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:33:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:33:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:34:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:34:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:34:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:34:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:34:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:34:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:34:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:34:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:34:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryStartedEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","name":null,"timestamp":"2025-09-28T16:34:34.645Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":30,"rootExecutionId":30,"description":"\nid = a10d59d2-fb2a-42a4-9309-aa24c7951d21\nrunId = 93d84776-32c9-4abc-8c94-40d9de622094\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#159, value#160, topic#161, partition#162, offset#163L, timestamp#164, timestampType#165]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#160 as string) AS value#173]\nInput [7]: [key#159, value#160, topic#161, partition#162, offset#163L, timestamp#164, timestampType#165]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#173]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@7389653e\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@3ef4a5c2","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#160 as string) AS value#173]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#159, value#160, topic#161, partition#162, offset#163L, timestamp#164, timestampType#165] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":402,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":403,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":404,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":401,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077274710,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":31,"rootExecutionId":30,"description":"\nid = a10d59d2-fb2a-42a4-9309-aa24c7951d21\nrunId = 93d84776-32c9-4abc-8c94-40d9de622094\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#159, value#160, topic#161, partition#162, offset#163L, timestamp#164, timestampType#165]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#160 as string) AS value#173]\nInput [7]: [key#159, value#160, topic#161, partition#162, offset#163L, timestamp#164, timestampType#165]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#173]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@485c7342\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@3ef4a5c2","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#160 as string) AS value#173]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#159, value#160, topic#161, partition#162, offset#163L, timestamp#164, timestampType#165] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":402,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":403,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":404,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":401,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077274717,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":31,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1759077274728,"Stage Infos":[{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":36,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"71\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[10],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"93d84776-32c9-4abc-8c94-40d9de622094","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"31","sql.streaming.queryId":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = a10d59d2-fb2a-42a4-9309-aa24c7951d21\nrunId = 93d84776-32c9-4abc-8c94-40d9de622094\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"30","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":36,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"71\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077274729,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"93d84776-32c9-4abc-8c94-40d9de622094","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"31","sql.streaming.queryId":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = a10d59d2-fb2a-42a4-9309-aa24c7951d21\nrunId = 93d84776-32c9-4abc-8c94-40d9de622094\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"30","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077274734,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077274734,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077274766,"Failed":false,"Killed":false,"Accumulables":[{"ID":405,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":406,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14255525,"Value":14255525,"Internal":true,"Count Failed Values":true},{"ID":407,"Name":"internal.metrics.executorRunTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":408,"Name":"internal.metrics.executorCpuTime","Update":1619527,"Value":1619527,"Internal":true,"Count Failed Values":true},{"ID":409,"Name":"internal.metrics.resultSize","Update":1209,"Value":1209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":14255525,"Executor Run Time":1,"Executor CPU Time":1619527,"Peak Execution Memory":0,"Result Size":1209,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":36,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"71\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077274729,"Completion Time":1759077274767,"Accumulables":[{"ID":405,"Name":"internal.metrics.executorDeserializeTime","Value":20,"Internal":true,"Count Failed Values":true},{"ID":406,"Name":"internal.metrics.executorDeserializeCpuTime","Value":14255525,"Internal":true,"Count Failed Values":true},{"ID":407,"Name":"internal.metrics.executorRunTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":408,"Name":"internal.metrics.executorCpuTime","Value":1619527,"Internal":true,"Count Failed Values":true},{"ID":409,"Name":"internal.metrics.resultSize","Value":1209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1759077274767,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":32,"rootExecutionId":30,"description":"\nid = a10d59d2-fb2a-42a4-9309-aa24c7951d21\nrunId = 93d84776-32c9-4abc-8c94-40d9de622094\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#180]\nArguments: <empty>, [toprettystring(value)#180]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan <empty>, [toprettystring(value)#180]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":440,"metricType":"sum"}]},"time":1759077274780,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":32,"accumUpdates":[[440,0]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":32,"time":1759077274782,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":31,"time":1759077274783,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":30,"time":1759077274783,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","name":null,"timestamp":"2025-09-28T16:34:34.647Z","batchId":0,"batchDuration":153,"durationMs":{"triggerExecution":153,"queryPlanning":9,"getBatch":1,"commitOffsets":17,"latestOffset":31,"addBatch":80,"walCommit":14},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":null,"endOffset":"{\"test-topic\":{\"0\":180}}","latestOffset":"{\"test-topic\":{\"0\":180}}","numInputRows":0,"inputRowsPerSecond":0.0,"processedRowsPerSecond":0.0,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":0,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":34,"rootExecutionId":34,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 2","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#80 as string) AS value#93]\nInput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#93]\nArguments: MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@154da784\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@1d6a58eb","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#80 as string) AS value#93]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":446,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":448,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":450,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":441,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077280043,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":33,"rootExecutionId":33,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 7","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 7, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6a555f9e\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 7, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@1725c8c7","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":444,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":449,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":452,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":443,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077280043,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":35,"rootExecutionId":35,"description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#112 as string) AS value#125]\nInput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#125]\nArguments: MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@26b65d3e\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4e60cebe","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#112 as string) AS value#125]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":445,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":447,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":451,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":442,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077280043,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":37,"rootExecutionId":34,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 2","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#80 as string) AS value#93]\nInput [7]: [key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#93]\nArguments: MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@5f2527e3\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 2, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@1d6a58eb","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#80 as string) AS value#93]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#79, value#80, topic#81, partition#82, offset#83L, timestamp#84, timestampType#85] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":446,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":448,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":450,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":441,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077280050,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":36,"rootExecutionId":33,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 7","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#8 as string) AS value#21]\nInput [7]: [key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#21]\nArguments: MicroBatchWrite[epoch: 7, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6160432f\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 7, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@1725c8c7","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#8 as string) AS value#21]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#7, value#8, topic#9, partition#10, offset#11L, timestamp#12, timestampType#13] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":444,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":449,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":452,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":443,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077280050,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":38,"rootExecutionId":35,"description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#112 as string) AS value#125]\nInput [7]: [key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#125]\nArguments: MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@590d970c\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 1, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@4e60cebe","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#112 as string) AS value#125]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#111, value#112, topic#113, partition#114, offset#115L, timestamp#116, timestampType#117] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":445,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":447,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":451,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":442,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077280050,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":37,"accumUpdates":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":38,"accumUpdates":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":36,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":11,"Submission Time":1759077280061,"Stage Infos":[{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"DataSourceRDD","Scope":"{\"id\":\"84\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[11],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"36","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"7","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 7","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"33","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"DataSourceRDD","Scope":"{\"id\":\"84\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077280062,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"71564d8a-b935-43a8-ab9e-b048739ca953","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"36","sql.streaming.queryId":"81950602-3c05-4333-be85-18f1eb3b003e","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"7","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 7","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"33","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerJobStart","Job ID":13,"Submission Time":1759077280068,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"74\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"DataSourceRDD","Scope":"{\"id\":\"83\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"38","sql.streaming.queryId":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"1","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 1","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"35","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"74\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"DataSourceRDD","Scope":"{\"id\":\"83\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077280069,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"38","sql.streaming.queryId":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"1","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 1","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"35","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerJobStart","Job ID":12,"Submission Time":1759077280076,"Stage Infos":[{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"73\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"DataSourceRDD","Scope":"{\"id\":\"82\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[13],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"aab100ec-0c4c-42f4-b383-765a004d3dd9","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"37","sql.streaming.queryId":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"2","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 2","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"34","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"73\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"DataSourceRDD","Scope":"{\"id\":\"82\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077280077,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"aab100ec-0c4c-42f4-b383-765a004d3dd9","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"37","sql.streaming.queryId":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"2","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 2","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"34","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077280067,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":12,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077280075,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":13,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077280619,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077280067,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077280621,"Failed":false,"Killed":false,"Accumulables":[{"ID":443,"Name":"duration","Update":"523","Value":"523","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":444,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":453,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":454,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9221086,"Value":9221086,"Internal":true,"Count Failed Values":true},{"ID":455,"Name":"internal.metrics.executorRunTime","Update":525,"Value":525,"Internal":true,"Count Failed Values":true},{"ID":456,"Name":"internal.metrics.executorCpuTime","Update":23401809,"Value":23401809,"Internal":true,"Count Failed Values":true},{"ID":457,"Name":"internal.metrics.resultSize","Update":2501,"Value":2501,"Internal":true,"Count Failed Values":true},{"ID":485,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":9221086,"Executor Run Time":525,"Executor CPU Time":23401809,"Peak Execution Memory":0,"Result Size":2501,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"DataSourceRDD","Scope":"{\"id\":\"84\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077280062,"Completion Time":1759077280621,"Accumulables":[{"ID":443,"Name":"duration","Value":"523","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":444,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":453,"Name":"internal.metrics.executorDeserializeTime","Value":19,"Internal":true,"Count Failed Values":true},{"ID":454,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9221086,"Internal":true,"Count Failed Values":true},{"ID":455,"Name":"internal.metrics.executorRunTime","Value":525,"Internal":true,"Count Failed Values":true},{"ID":456,"Name":"internal.metrics.executorCpuTime","Value":23401809,"Internal":true,"Count Failed Values":true},{"ID":457,"Name":"internal.metrics.resultSize","Value":2501,"Internal":true,"Count Failed Values":true},{"ID":485,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":11,"Completion Time":1759077280621,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerTaskEnd","Stage ID":12,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077280075,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077280637,"Failed":false,"Killed":false,"Accumulables":[{"ID":442,"Name":"duration","Update":"532","Value":"532","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":445,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":489,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8159541,"Value":8159541,"Internal":true,"Count Failed Values":true},{"ID":490,"Name":"internal.metrics.executorRunTime","Update":534,"Value":534,"Internal":true,"Count Failed Values":true},{"ID":491,"Name":"internal.metrics.executorCpuTime","Update":32701676,"Value":32701676,"Internal":true,"Count Failed Values":true},{"ID":492,"Name":"internal.metrics.resultSize","Update":2501,"Value":2501,"Internal":true,"Count Failed Values":true},{"ID":520,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":8159541,"Executor Run Time":534,"Executor CPU Time":32701676,"Peak Execution Memory":0,"Result Size":2501,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"74\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"DataSourceRDD","Scope":"{\"id\":\"83\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077280069,"Completion Time":1759077280637,"Accumulables":[{"ID":442,"Name":"duration","Value":"532","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":445,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"internal.metrics.executorDeserializeTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":489,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8159541,"Internal":true,"Count Failed Values":true},{"ID":490,"Name":"internal.metrics.executorRunTime","Value":534,"Internal":true,"Count Failed Values":true},{"ID":491,"Name":"internal.metrics.executorCpuTime","Value":32701676,"Internal":true,"Count Failed Values":true},{"ID":492,"Name":"internal.metrics.resultSize","Value":2501,"Internal":true,"Count Failed Values":true},{"ID":520,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":13,"Completion Time":1759077280638,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":39,"rootExecutionId":33,"description":"\nid = 81950602-3c05-4333-be85-18f1eb3b003e\nrunId = 71564d8a-b935-43a8-ab9e-b048739ca953\nbatch = 7","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#190]\nArguments: [toprettystring(value)#190]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#190]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":558,"metricType":"sum"}]},"time":1759077280638,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":39,"accumUpdates":[[558,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":39,"time":1759077280645,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":36,"time":1759077280646,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":33,"time":1759077280646,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":40,"rootExecutionId":35,"description":"\nid = 70f7c5b3-2754-4583-9e96-85f8a93a35d3\nrunId = 9f96069e-54cf-4dbd-bb6c-dbd86ee90719\nbatch = 1","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#197]\nArguments: [toprettystring(value)#197]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#197]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":559,"metricType":"sum"}]},"time":1759077280654,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":40,"accumUpdates":[[559,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":40,"time":1759077280662,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":38,"time":1759077280662,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":35,"time":1759077280663,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","name":null,"timestamp":"2025-09-28T16:34:40.000Z","batchId":7,"batchDuration":676,"durationMs":{"triggerExecution":676,"queryPlanning":6,"getBatch":0,"commitOffsets":29,"latestOffset":6,"addBatch":608,"walCommit":25},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":170}}","endOffset":"{\"test-topic\":{\"0\":180}}","latestOffset":"{\"test-topic\":{\"0\":180}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":14.792899408284022,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","name":null,"timestamp":"2025-09-28T16:34:40.000Z","batchId":1,"batchDuration":686,"durationMs":{"triggerExecution":686,"queryPlanning":7,"getBatch":0,"commitOffsets":23,"latestOffset":6,"addBatch":625,"walCommit":25},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":170}}","endOffset":"{\"test-topic\":{\"0\":180}}","latestOffset":"{\"test-topic\":{\"0\":180}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":14.577259475218657,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"SparkListenerTaskEnd","Stage ID":13,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077280619,"Executor ID":"1","Host":"172.18.0.2","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077281170,"Failed":false,"Killed":false,"Accumulables":[{"ID":441,"Name":"duration","Update":"523","Value":"523","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":446,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":523,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":524,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8402886,"Value":8402886,"Internal":true,"Count Failed Values":true},{"ID":525,"Name":"internal.metrics.executorRunTime","Update":525,"Value":525,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorCpuTime","Update":22105446,"Value":22105446,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.resultSize","Update":2501,"Value":2501,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":8402886,"Executor Run Time":525,"Executor CPU Time":22105446,"Peak Execution Memory":0,"Result Size":2501,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"73\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"DataSourceRDD","Scope":"{\"id\":\"82\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"MicroBatchScan\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077280077,"Completion Time":1759077281171,"Accumulables":[{"ID":441,"Name":"duration","Value":"523","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":446,"Name":"number of output rows","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":523,"Name":"internal.metrics.executorDeserializeTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":524,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8402886,"Internal":true,"Count Failed Values":true},{"ID":525,"Name":"internal.metrics.executorRunTime","Value":525,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorCpuTime","Value":22105446,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.resultSize","Value":2501,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.input.recordsRead","Value":10,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":12,"Completion Time":1759077281171,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":41,"rootExecutionId":34,"description":"\nid = 892233ee-07df-4a87-ab1b-21d9ce8b5f88\nrunId = aab100ec-0c4c-42f4-b383-765a004d3dd9\nbatch = 2","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#204]\nArguments: [toprettystring(value)#204]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(value)#204]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":560,"metricType":"sum"}]},"time":1759077281185,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":41,"accumUpdates":[[560,10]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":41,"time":1759077281189,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":37,"time":1759077281190,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":34,"time":1759077281190,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","name":null,"timestamp":"2025-09-28T16:34:40.000Z","batchId":2,"batchDuration":1206,"durationMs":{"triggerExecution":1206,"queryPlanning":7,"getBatch":0,"commitOffsets":16,"latestOffset":6,"addBatch":1152,"walCommit":25},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":"{\"test-topic\":{\"0\":170}}","endOffset":"{\"test-topic\":{\"0\":180}}","latestOffset":"{\"test-topic\":{\"0\":180}}","numInputRows":10,"inputRowsPerSecond":1.0,"processedRowsPerSecond":8.291873963515755,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":10,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:34:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:35:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:35:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:35:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryStartedEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","name":null,"timestamp":"2025-09-28T16:35:01.709Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":42,"rootExecutionId":42,"description":"\nid = 533f05db-c2f5-4a2c-9118-e96f2e2d47f1\nrunId = 129bc447-f7f7-4b90-933a-8cf692535756\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#215, value#216, topic#217, partition#218, offset#219L, timestamp#220, timestampType#221]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#216 as string) AS value#229]\nInput [7]: [key#215, value#216, topic#217, partition#218, offset#219L, timestamp#220, timestampType#221]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#229]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@1029dd2b\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@221834ee","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#216 as string) AS value#229]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#215, value#216, topic#217, partition#218, offset#219L, timestamp#220, timestampType#221] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":562,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":563,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":564,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":561,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077301782,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":43,"rootExecutionId":42,"description":"\nid = 533f05db-c2f5-4a2c-9118-e96f2e2d47f1\nrunId = 129bc447-f7f7-4b90-933a-8cf692535756\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nWriteToDataSourceV2 (3)\n+- * Project (2)\n   +- MicroBatchScan (1)\n\n\n(1) MicroBatchScan\nOutput [7]: [key#215, value#216, topic#217, partition#218, offset#219L, timestamp#220, timestampType#221]\nclass org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan\n\n(2) Project [codegen id : 1]\nOutput [1]: [cast(value#216 as string) AS value#229]\nInput [7]: [key#215, value#216, topic#217, partition#218, offset#219L, timestamp#220, timestampType#221]\n\n(3) WriteToDataSourceV2\nInput [1]: [value#229]\nArguments: MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@6889b5f8\n\n","sparkPlanInfo":{"nodeName":"WriteToDataSourceV2","simpleString":"WriteToDataSourceV2 MicroBatchWrite[epoch: 0, writer: ConsoleWriter[numRows=20, truncate=true]], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$2281/0x0000000840f7d440@221834ee","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [cast(value#216 as string) AS value#229]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MicroBatchScan","simpleString":"MicroBatchScan[key#215, value#216, topic#217, partition#218, offset#219L, timestamp#220, timestampType#221] class org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaScan","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":562,"metricType":"sum"},{"name":"estimated number of fetched offsets out of range","accumulatorId":563,"metricType":"v2Custom_org.apache.spark.sql.kafka010.OffsetOutOfRangeMetric"},{"name":"number of data loss error","accumulatorId":564,"metricType":"v2Custom_org.apache.spark.sql.kafka010.DataLossMetric"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":561,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1759077301790,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":43,"accumUpdates":[]}
{"Event":"SparkListenerJobStart","Job ID":14,"Submission Time":1759077301803,"Stage Infos":[{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":49,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"98\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[14],"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"129bc447-f7f7-4b90-933a-8cf692535756","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"43","sql.streaming.queryId":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 533f05db-c2f5-4a2c-9118-e96f2e2d47f1\nrunId = 129bc447-f7f7-4b90-933a-8cf692535756\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"42","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":49,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"98\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077301806,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39735","spark.submit.pyFiles":"*********(redacted)","spark.app.startTime":"1759076568485","spark.rdd.compress":"True","callSite.short":"start at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"129bc447-f7f7-4b90-933a-8cf692535756","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1759076568310","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/tmp/spark-events","spark.app.initial.jar.urls":"*********(redacted)","spark.sql.execution.id":"43","sql.streaming.queryId":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","spark.sql.warehouse.dir":"file:/home/jovyan/work/spark-warehouse","streaming.sql.batchId":"0","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","spark.master":"spark://spark-master:7077","spark.jars.packages":"org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1","spark.job.interruptOnCancel":"true","spark.repl.local.jars":"*********(redacted)","spark.executor.id":"driver","spark.ui.port":"4040","spark.app.name":"KafkaTestStreaming","spark.submit.deployMode":"client","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint","spark.driver.host":"306c10bfc250","spark.app.id":"app-20250928162249-0006","spark.job.description":"\nid = 533f05db-c2f5-4a2c-9118-e96f2e2d47f1\nrunId = 129bc447-f7f7-4b90-933a-8cf692535756\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.files":"*********(redacted)","spark.jars":"*********(redacted)","spark.app.initial.file.urls":"*********(redacted)","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"42","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077301812,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1759077301812,"Executor ID":"0","Host":"172.18.0.8","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1759077301838,"Failed":false,"Killed":false,"Accumulables":[{"ID":565,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9755495,"Value":9755495,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.executorRunTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.executorCpuTime","Update":1531281,"Value":1531281,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.resultSize","Update":1209,"Value":1209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":9755495,"Executor Run Time":1,"Executor CPU Time":1531281,"Peak Execution Memory":0,"Result Size":1209,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"start at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":49,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"98\",\"name\":\"parallelize\"}","Callsite":"start at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1759077301806,"Completion Time":1759077301839,"Accumulables":[{"ID":565,"Name":"internal.metrics.executorDeserializeTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9755495,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.executorRunTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.executorCpuTime","Value":1531281,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.resultSize","Value":1209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":14,"Completion Time":1759077301841,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":44,"rootExecutionId":42,"description":"\nid = 533f05db-c2f5-4a2c-9118-e96f2e2d47f1\nrunId = 129bc447-f7f7-4b90-933a-8cf692535756\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.start(DataStreamWriter.scala:251)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [toprettystring(value)#236]\nArguments: <empty>, [toprettystring(value)#236]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan <empty>, [toprettystring(value)#236]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":600,"metricType":"sum"}]},"time":1759077301856,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.jars":"*********(redacted)","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.streaming.checkpointLocation":"/tmp/checkpoint"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":44,"accumUpdates":[[600,0]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":44,"time":1759077301859,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":43,"time":1759077301860,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":42,"time":1759077301860,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","name":null,"timestamp":"2025-09-28T16:35:01.711Z","batchId":0,"batchDuration":169,"durationMs":{"triggerExecution":169,"queryPlanning":9,"getBatch":1,"commitOffsets":20,"latestOffset":38,"addBatch":84,"walCommit":16},"eventTime":{},"stateOperators":[],"sources":[{"description":"KafkaV2[Subscribe[test-topic]]","startOffset":null,"endOffset":"{\"test-topic\":{\"0\":180}}","latestOffset":"{\"test-topic\":{\"0\":180}}","numInputRows":0,"inputRowsPerSecond":0.0,"processedRowsPerSecond":0.0,"metrics":{"minOffsetsBehindLatest":"0","maxOffsetsBehindLatest":"0","avgOffsetsBehindLatest":"0.0"}}],"sink":{"description":"org.apache.spark.sql.execution.streaming.ConsoleTable$@6ae051f7","numOutputRows":0,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:35:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:35:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:35:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:35:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:35:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:35:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:35:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:35:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:35:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:35:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:35:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:35:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:35:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:35:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:35:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:35:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:36:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:36:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:36:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:36:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:36:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:36:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:36:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:36:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:36:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:36:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:36:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:36:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:36:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:36:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:36:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:36:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:36:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:36:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:36:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:36:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:37:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:37:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:37:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:37:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:37:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:37:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:37:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:37:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:37:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:37:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:37:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:37:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:37:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:37:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:37:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:37:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:37:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:37:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:37:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:37:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:37:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:37:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:37:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:37:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:38:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:38:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:38:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:38:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:38:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:38:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:38:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:38:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:38:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:38:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:38:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:38:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:38:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:38:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:38:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:38:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:38:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:38:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:39:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:39:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:39:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:39:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:39:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:39:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:39:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:39:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:39:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:39:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:39:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:39:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:39:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:39:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:39:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:39:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:39:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:39:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:39:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:39:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:39:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:39:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:39:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:39:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:39:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:40:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:40:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:40:00.002Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:40:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:40:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:40:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:40:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:40:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:40:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:40:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:40:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:40:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:40:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:40:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:40:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:40:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:40:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:40:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:40:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:40:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:41:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:41:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:41:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:41:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:41:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:41:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:41:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:41:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:41:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:41:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:41:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:41:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:41:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:41:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:41:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:41:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:41:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:41:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:41:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:41:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:42:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:42:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:42:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:42:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:42:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:42:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:42:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:42:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:42:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:42:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:42:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:42:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:42:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:42:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:42:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:42:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:42:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:42:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:42:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:42:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:42:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:43:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:43:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:43:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:43:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:43:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:43:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:43:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:43:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:43:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:43:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:43:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:43:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:43:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:43:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:43:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:43:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:43:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:43:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:43:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:43:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:44:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:44:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:44:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:44:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:44:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:44:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:44:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:44:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:44:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:44:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:44:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:44:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:44:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:44:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:44:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:44:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:44:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:44:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:44:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:44:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:44:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:44:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:44:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:44:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:44:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:45:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:45:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:45:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:45:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:45:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:45:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:45:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:45:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:45:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:45:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:45:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:45:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:45:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:45:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:45:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:45:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:45:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:45:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:45:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:45:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:46:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:46:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:46:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:46:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:46:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:46:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:46:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:46:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:46:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:46:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:46:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:46:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:46:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:46:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:46:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:46:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:46:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:47:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:47:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:47:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:47:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:47:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:47:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:47:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:47:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:47:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:47:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:47:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:47:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:47:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:47:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:47:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:47:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:48:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:48:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:48:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:48:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:48:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:48:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:48:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:48:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:48:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:48:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:48:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:48:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:48:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:48:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:48:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:48:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:48:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:48:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:48:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:48:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:49:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:49:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:49:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:49:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:49:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:49:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:49:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:49:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:49:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:49:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:49:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:49:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:49:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:49:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:49:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:49:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:49:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:49:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:49:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:49:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:50:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:50:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:50:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:50:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:50:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:50:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:50:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:50:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:50:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:50:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:50:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:50:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:50:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:50:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:50:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:50:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:50:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:50:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:50:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:50:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:50:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:50:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:50:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:50:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:51:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:51:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:51:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:51:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:51:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:51:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:51:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:51:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:51:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:51:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:51:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:51:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:51:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:51:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:51:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:51:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:51:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:51:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:51:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:51:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:52:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:52:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:52:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:52:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:52:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:52:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:52:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:52:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:52:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:52:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:52:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:52:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:52:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:52:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:52:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:52:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:52:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:52:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:52:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:52:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:53:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:53:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:53:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:53:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:53:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:53:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:53:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:53:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:53:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:53:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:53:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:53:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:53:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:53:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:53:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:53:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:53:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:53:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:53:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:54:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:54:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:54:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:54:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:54:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:54:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:54:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:54:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:54:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:54:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:54:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:54:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:54:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:54:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:54:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:54:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:54:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:54:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:54:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:54:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:55:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:55:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:55:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:55:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:55:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:55:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:55:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:55:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:55:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:55:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:55:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:55:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:55:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:55:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:55:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:55:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:55:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:55:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:55:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:55:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:56:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:56:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:56:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:56:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:56:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:56:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:56:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:56:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:56:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:56:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:56:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:56:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:56:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:56:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:56:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:56:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:56:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:57:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:57:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:57:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:57:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:57:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:57:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:57:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:57:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:57:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:57:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:57:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:57:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:57:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:57:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:57:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:57:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:57:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:58:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:58:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:58:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:58:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:58:00.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:58:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:58:20.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:58:20.002Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:58:20.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:58:20.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:58:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:58:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:58:30.004Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:58:30.002Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:58:30.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:58:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:58:40.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:58:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:58:40.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:58:40.004Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:59:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:59:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:59:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:59:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:59:00.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:59:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:59:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:59:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:59:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:59:10.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:59:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:59:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:59:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:59:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:59:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:59:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:59:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:59:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:59:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:59:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T16:59:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T16:59:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T16:59:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T16:59:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T16:59:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:00:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:00:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:00:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:00:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:00:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:00:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:00:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:00:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:00:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:00:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:00:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:00:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:00:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:00:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:00:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:00:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:00:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:00:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:00:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:00:50.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:01:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:01:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:01:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:01:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:01:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:01:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:01:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:01:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:01:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:01:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:01:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:01:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:01:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:01:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:01:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:01:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:01:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:01:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:01:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:01:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:01:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:01:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:01:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:01:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:01:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:02:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:02:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:02:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:02:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:02:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:02:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:02:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:02:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:02:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:02:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:02:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:02:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:02:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:02:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:02:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:02:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:02:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:02:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:02:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:02:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:03:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:03:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:03:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:03:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:03:10.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:03:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:03:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:03:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:03:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:03:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:03:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:03:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:03:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:03:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:03:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:03:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:03:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:03:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:03:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:03:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:03:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:03:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:03:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:03:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:04:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:04:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:04:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:04:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:04:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:04:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:04:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:04:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:04:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:04:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:04:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:04:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:04:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:04:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:04:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:04:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:04:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:04:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:04:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:04:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:05:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:05:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:05:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:05:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:05:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:05:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:05:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:05:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:05:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:05:10.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:05:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:05:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:05:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:05:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:05:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:05:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:05:30.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:05:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:05:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:05:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:05:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:05:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:05:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:05:40.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:05:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:05:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:05:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:05:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:05:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:05:50.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:06:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:06:00.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:06:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:06:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:06:00.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:06:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:06:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:06:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:06:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:06:20.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:06:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:06:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:06:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:06:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:06:30.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"533f05db-c2f5-4a2c-9118-e96f2e2d47f1","runId":"129bc447-f7f7-4b90-933a-8cf692535756","timestamp":"2025-09-28T17:06:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"892233ee-07df-4a87-ab1b-21d9ce8b5f88","runId":"aab100ec-0c4c-42f4-b383-765a004d3dd9","timestamp":"2025-09-28T17:06:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"a10d59d2-fb2a-42a4-9309-aa24c7951d21","runId":"93d84776-32c9-4abc-8c94-40d9de622094","timestamp":"2025-09-28T17:06:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"70f7c5b3-2754-4583-9e96-85f8a93a35d3","runId":"9f96069e-54cf-4dbd-bb6c-dbd86ee90719","timestamp":"2025-09-28T17:06:40.000Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"81950602-3c05-4333-be85-18f1eb3b003e","runId":"71564d8a-b935-43a8-ab9e-b048739ca953","timestamp":"2025-09-28T17:06:40.000Z"}
